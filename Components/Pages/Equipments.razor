@page "/equipments"
@using System.ComponentModel.DataAnnotations

<h1>Equipment</h1>
<style>
    .container {
        display: flex;
        gap: 20px;
        padding: 20px;
        font-family: Arial, sans-serif;
    }

    .equipment-list-section {
        flex: 1;
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .equipment-list-section h2 {
            margin-top: 0;
            margin-bottom: 15px;
            color: #333;
        }

    .equipment-list {
        list-style: none;
        padding: 0;
        margin-bottom: 15px;
    }

        .equipment-list li {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 8px 0;
            border-bottom: 1px solid #eee;
        }

            .equipment-list li:last-child {
                border-bottom: none;
            }

            .equipment-list li label {
                display: flex;
                align-items: center;
                font-size: 14px;
                color: #333;
            }

            .equipment-list li input[type="checkbox"] {
                margin-right: 10px;
            }

            .equipment-list li .actions button {
                padding: 5px 10px;
                border: none;
                border-radius: 999px;
                font-size: 12px;
                cursor: pointer;
                color: white;
                margin-left: 8px;
            }

            .equipment-list li .actions .edit {
                background-color: #4a90e2;
            }

            .equipment-list li .actions .delete {
                background-color: #e74c3c;
            }

    .equipment-list-controls {
        display: flex;
        gap: 10px;
        margin-bottom: 15px;
    }

        .equipment-list-controls button {
            padding: 8px 16px;
            border: none;
            border-radius: 999px;
            background-color: #4a90e2;
            color: white;
            font-size: 14px;
            cursor: pointer;
            transition: background-color 0.2s;
        }

            .equipment-list-controls button:hover {
                background-color: #3b78c2;
            }

    .pagination {
        display: flex;
        gap: 5px;
        align-items: center;
    }

        .pagination button {
            padding: 6px 10px;
            border: 1px solid #ccc;
            border-radius: 999px;
            font-size: 12px;
            cursor: pointer;
            background-color: white;
            color: #333;
        }

            .pagination button.active {
                background-color: #4a90e2;
                color: white;
                border-color: #4a90e2;
            }

    .add-equipment-section {
        flex: 1;
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .add-equipment-section h2 {
            margin-top: 0;
            margin-bottom: 15px;
            color: #333;
        }

    .add-equipment-form {
        display: flex;
        flex-direction: column;
        gap: 12px;
    }

    .form-group {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

        .form-group label {
            width: 100px;
            font-weight: 500;
            font-size: 14px;
            color: #333;
        }

        .form-group input[type="text"],
        .form-group input[type="number"] {
            width: 220px;
            padding: 8px 14px;
            border: 1px solid #ccc;
            border-radius: 999px;
            font-size: 14px;
            color: #333;
            outline: none;
            transition: border-color 0.2s;
            background-color: #fff;
        }

    .add-equipment-form button[type="submit"] {
        margin-top: 16px;
        padding: 8px 16px;
        border: none;
        border-radius: 999px;
        background-color: #4a90e2;
        color: white;
        font-size: 14px;
        cursor: pointer;
        transition: background-color 0.2s;
    }

        .add-equipment-form button[type="submit"]:hover {
            background-color: #3b78c2;
        }
</style>

<div class="container">
    <div class="equipment-list-section">
        <h2>Equipment List</h2>
        <ul class="equipment-list">
            @foreach (var equipment in equipmentList)
            {
                <li>
                    <label>
                        <input type="checkbox" @bind="equipment.IsSelected" />
                        @equipment.Name
                    </label>
                    <div class="actions">
                        <button class="edit">✏️</button>
                        <button class="delete" @onclick="() => RemoveEquipment(equipment.Id)">🗑️</button>
                    </div>
                </li>
            }
        </ul>
        <div class="equipment-list-controls">
            <button @onclick="ModifySelectedEquipment">Modify Equipment</button>
            <button @onclick="RemoveSelectedEquipment">Remove Equipment</button>
        </div>
        <div class="pagination">
            <button class="@(currentPage == 1 ? "active" : "")">1</button>
            <button class="@(currentPage == 2 ? "active" : "")">2</button>
            <button class="@(currentPage == 3 ? "active" : "")">3</button>
            <span>...</span>
            <button class="@(currentPage == 67 ? "active" : "")">67</button>
            <button class="@(currentPage == 68 ? "active" : "")">68</button>
        </div>
    </div>

    <div class="add-equipment-section">
        <h2>Add Equipment</h2>
        <form class="add-equipment-form" @onsubmit="AddEquipmentItem">
            <div class="form-group">
                <label for="name">Name:</label>
                <input type="text" id="name" @bind="newEquipment.Name" />
            </div>
            <div class="form-group">
                <label for="description">Description:</label>
                <input type="text" id="description" @bind="newEquipment.Description" />
            </div>
            <div class="form-group">
                <label for="category">Category:</label>
                <input type="text" id="category" @bind="newEquipment.Category" />
            </div>
            <div class="form-group">
                <label for="daily-cost">Daily Cost:</label>
                <input type="number" id="daily-cost" @bind="newEquipment.DailyCost" />
            </div>
            <button type="submit">Add Equipment</button>
        </form>
    </div>
</div>

@code {
    public class EquipmentItem
    {
        public int Id { get; set; }
        public string Name { get; set; } = "";
        public string Description { get; set; } = "";
        public string Category { get; set; } = "";
        public decimal DailyCost { get; set; }
        public bool IsSelected { get; set; } = false;
    }

    private List<EquipmentItem> equipmentList = new List<EquipmentItem>
    {
        new EquipmentItem { Id = 1, Name = "Ladder", Description = "Extension ladder", Category = "Tools", DailyCost = 15.00m },
        new EquipmentItem { Id = 2, Name = "Drill", Description = "Cordless power drill", Category = "Tools", DailyCost = 12.50m },
        new EquipmentItem { Id = 3, Name = "Generator", Description = "Portable generator", Category = "Power", DailyCost = 25.00m }
        // Add more equipment items here
    };

    private EquipmentItem newEquipment = new EquipmentItem();
    private int nextId = 4;
    private int currentPage = 1; // For pagination

    private void AddEquipmentItem()
    {
        newEquipment.Id = nextId++;
        equipmentList.Add(newEquipment);
        newEquipment = new EquipmentItem(); // Clear the form
    }

    private void RemoveEquipment(int id)
    {
        equipmentList.RemoveAll(e => e.Id == id);
    }

    private void ModifySelectedEquipment()
    {
        var selectedItems = equipmentList.Where(e => e.IsSelected).ToList();
        if (selectedItems.Any())
        {
            Console.WriteLine($"Modifying {selectedItems.Count} equipment items.");
            // Implement your modify logic here, perhaps navigate to an edit page
        }
        else
        {
            Console.WriteLine("No equipment selected for modification.");
        }
    }

    private void RemoveSelectedEquipment()
    {
        equipmentList.RemoveAll(e => e.IsSelected);
    }
}